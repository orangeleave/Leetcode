//Advanced way
public class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        List<Integer> ele = new ArrayList<Integer>();
        for (int i = 0; i < numRows; i++) {
            ele.add(0, 1);
            for (int j = 1; j < i; j++) ele.set(j, ele.get(j) + ele.get(j + 1));
            res.add(new ArrayList<Integer>(ele));
        }
        return res;
    }
}

//2016/11/12
public class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        List<Integer> ele = new ArrayList<Integer>();
        if (numRows == 0) return res;
        ele.add(1);
        res.add(ele);
        int i = 1;
        while (numRows > 1 && i < numRows) {
            ele = new ArrayList<Integer>();
            ele.add(1);
            int j = 1;
            while (i > 1 && j < i) {
                ele.add(res.get(res.size() - 1).get(j - 1) + res.get(res.size() - 1).get(j));
                j++;
            }
            ele.add(1);
            res.add(ele);
            i++;
        }
        return res;
    }
}
