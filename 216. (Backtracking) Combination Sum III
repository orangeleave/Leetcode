public class Solution {
    public List<List<Integer>> combinationSum3(int k, int n) {
        List<List<Integer>> res = new ArrayList<>();
        backtrack(res, k, n, 1, new ArrayList<>());
        return res;
    }
    private void backtrack(List<List<Integer>> res, int count, int comp, int pos, List<Integer> ele) {
        if (count == 0 && comp == 0) {
            res.add(new ArrayList<>(ele));
        } else {
            for (int i = pos; i <= 9; i++) {
                ele.add(i);
                backtrack(res, count - 1, comp - i, i + 1, ele);
                ele.remove(ele.size() - 1);
            }
        }
    }
}
