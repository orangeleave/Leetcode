public class Solution {
    public int depthSumInverse(List<NestedInteger> nestedList) {
        Queue<NestedInteger> Q = new LinkedList<>();
        for (NestedInteger ni : nestedList)     Q.offer(ni);
        int unweighted = 0, weighted = 0;
        while (!Q.isEmpty()) {
            int size = Q.size();
            for (int i = 0; i < size; i++) {
                NestedInteger ni = Q.poll();
                if (ni.isInteger())     {
                    unweighted += ni.getInteger();
                }
                else {
                    for (NestedInteger ele : ni.getList())  Q.offer(ele);
                }
            }
            weighted += unweighted;
        }
        return weighted;
    }
}
