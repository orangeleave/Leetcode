public class Solution {
    public int maxSubArray(int[] nums) {
    
    //Method 1:
        int n = nums.length;
        int res = Integer.MIN_VALUE;
        int[][] values = new int[n][n];
        for (int i = 0; i < n; i++) {
            values[i][i] = nums[i];
        }
        for (int d = 1; d < n; d++) {
            for (int i = 0; i < n - d; i++) {
                int j = i + d;
                values[i][j] = values[i][j - 1] + nums[j];
                res = Math.max(res, values[i][j]);
            }
        }
        return res;
        
        
   //Method 2:     
        int n = nums.length;
        int[][] values = new int[n][n];
        for (int i = 0; i < n; i++) {
            values[i][i] = nums[i];
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < i; j++) {
                values[i][j] = Integer.MIN_VALUE;
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                values[i][j] = values[i][j - 1] + nums[j];
            }
        }
        int res = Integer.MIN_VALUE;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                res = Math.max(res, values[i][j]);
            }
        }
        return res;
    }
}
