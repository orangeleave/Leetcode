/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {

//concise version
    public boolean hasPathSum(TreeNode root, int sum) {
        if (root == null)   return false;
        if (root.left == null && root.right == null && sum - root.val == 0) return true;
        return hasPathSum(root.left, sum - root.val) || hasPathSum(root.right, sum - root.val);
    }


//old version
    public boolean hasPathSum(TreeNode root, int sum) {
        if (root == null)   return false;
        while (root.left != null || root.right != null) {
            if (root.left != null && root.right != null) {
                return hasPathSum(root.left, sum - root.val) || hasPathSum(root.right, sum - root.val);
            }
            if (root.left != null)  return hasPathSum(root.left, sum - root.val);
            if (root.right != null) return hasPathSum(root.right, sum - root.val);
        }
        if (sum - root.val == 0) {
            return true;
        } else {
            return false;
        }
    }
}
