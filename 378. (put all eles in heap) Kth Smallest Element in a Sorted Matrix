public class Solution {
    public int kthSmallest(int[][] matrix, int k) {
        PriorityQueue<Tuple> pq = new PriorityQueue<>(new Comparator<Tuple>() {
            public int compare(Tuple o1, Tuple o2) {
                return o1.val - o2.val;
            }
        });
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[0].length; j++) {
                pq.offer(new Tuple(i, j, matrix[i][j]));
            }
        }
        int res = 0;
        for (int i = 0; i < k; i++) {
            res = pq.poll().val;
        }
        return res;
    }
}
class Tuple {
    int x, y, val;
    public Tuple(int x, int y, int val) {
        this.x = x;
        this.y = y;
        this.val = val;
    }
}
